import telebot
from telebot.handler_backends import StatesGroup, State

from funcs.datatime import gel_welcome
from funcs.functionality import functionality
from funcs.functionality2 import functionality2
from init_bot import bot


class UserState(StatesGroup):
    state1 = State()


@bot.message_handler(commands=["start", "help"])
def start(message: telebot.types.Message):
    text = f"{gel_welcome()} \n" \
           f"–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞üèõ\n\n" \
           f"–í–æ—Ç —á—Ç–æ —è –∏–º–µ—é:\n" \
           f"{functionality()}"
    bot.send_message(message.chat.id, text)
    bot.set_state(message.from_user.id, UserState.state1)


@bot.message_handler(commands=["get_info"], state=UserState.state1)
def get_info(message: telebot.types.Message):
    text = f"–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?üë©üèª‚Äçüéì\n" \
           f"{functionality2()}"
    bot.send_message(message.chat.id, text)


@bot.message_handler(commands=["get_directorate"])
def get_directorate(message: telebot.types.Message):
    markup = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, row_width=2)
    markup.add(
        telebot.types.KeyboardButton("–ò–¢–°"),
        telebot.types.KeyboardButton("–ò–§–•–¢–∏–ú"),
        telebot.types.KeyboardButton("–ò–ù–≠–õ"),
        telebot.types.KeyboardButton("–ò–Ø–≠–∏–¢–§"),
        telebot.types.KeyboardButton("–ò–†–ò–¢"),
        telebot.types.KeyboardButton("–ò–ü–¢–ú"),
        telebot.types.KeyboardButton("–ò–ù–≠–£")

    )
    bot.reply_to(message, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –∫–∞–∫–æ–≥–æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞ –í–∞–º –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å?", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ò–¢–°")
def handle_action(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/its_ngtu"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/its"}
    })
    bot.reply_to(message, "–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–¢–°:", reply_markup=markup)
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
    bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–§–•–¢–∏–ú")
def handle_action(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/ifhtim"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/ifhtim"}
    })
    bot.reply_to(message, "–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–§–•–¢–∏–ú:", reply_markup=markup)
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
    bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–ù–≠–õ")
def handle_action(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/inel_ngtu"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/inel"}
    })
    bot.reply_to(message, "–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–ù–≠–õ:", reply_markup=markup)
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
    bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–Ø–≠–∏–¢–§")
def handle_action(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/nnstu_ftf"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/iyaeitf"}
    })
    bot.reply_to(message, "–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–Ø–≠–∏–¢–§:", reply_markup=markup)
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
    bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–†–ò–¢")
def handle_action(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/irit_official"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/irit"}
    })
    bot.reply_to(message, "–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–†–ò–¢:", reply_markup=markup)
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
    bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–ü–¢–ú")
def handle_action(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/ngtuiptm"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/iptm"}
    })
    bot.reply_to(message, "–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–ü–¢–ú:", reply_markup=markup)
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
    bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(func=lambda message: message.text == "–ò–ù–≠–£")
def handle_action(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–ì—Ä—É–ø–ø–∞ –≤ –í–ö": {"url": "https://vk.com/ineungtu"},
        "–°–∞–π—Ç": {"url": "https://www.nntu.ru/structure/view/podrazdeleniya/ineu"}
    })
    bot.reply_to(message, "–í–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Å—ã–ª–∫–∏ –æ –¥–∏—Ä–µ–∫—Ü–∏–∏ –ò–ù–≠–£:", reply_markup=markup)
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
    bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(commands=["get_url"])
def get_url(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç": {
            "url": "https://auth.nntu.ru/idp/oauth2_login.jsp#/provider/LDAP/12ef96388641343f28b7d5bd10cf430e"}
    })
    bot.reply_to(message, "–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —É—á–∞—â–µ–≥–æ—Å—è/—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ù–ì–¢–£ –∏–º. –†.–ï.–ê–ª–µ–∫—Å–µ–µ–≤–∞:",
                 reply_markup=markup)
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
    bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(commands=["get_lk"])
def get_lk(message: telebot.types.Message):
    markup = telebot.util.quick_markup({
        "–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞": {"url": "https://www.nntu.ru/"}
    })
    bot.reply_to(message, "–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç –ù–ì–¢–£ –∏–º. –†.–ï.–ê–ª–µ–∫—Å–µ–µ–≤–∞:", reply_markup=markup)
    bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:\n{functionality2()}")
    bot.clear_reply_handlers_by_message_id(message.message_id)


@bot.message_handler(commands=["end"], state=UserState.state1)
def end(message: telebot.types.Message):
    markup = telebot.types.ReplyKeyboardRemove()
    text = f"–°–ø–∞—Å–∏–±–æ! –ü–æ–∫–∞)"
    bot.send_message(message.chat.id, text, reply_markup=markup)
    bot.delete_state(message.from_user.id)
